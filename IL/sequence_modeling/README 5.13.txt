TODO: 目前已经修改好了 __main__.py 和 feature_timeseries.py, 其中核心逻辑的变动在 feature_timeseries.py 中 TODO 标志的部分, 这些部分在 __main__.py 中对应逻辑的变化我已经修改好了, 但是在 preprocess.py 部分由于涉及到实际 actions 张量如何构建, 我没有具体完成, 主要需要修改的部分是处理逻辑中的 TODO 以及 filterData() 这个函数.

对特征的修改情况:

request2obs 的返回值是一个 dict

{
	'event': 这是当前事件对应的向量, 修改为 85 维, 去掉了圈风场风信息
	'global_state': 座风, 圈风, 手牌(4), 副露(4), 剩余牌堆数(4), 一共 14 通道, 14 * 4* 9
	'action_mask': 动作的 mask
}

## 稀疏embedding格式baseline（core idea是分成四个部分，每一部分用one-hot向量编码，再concat成一个长向量）：

1. 执行动作的玩家 (Acting Player):

需要4位 one-hot 编码 (例如, 玩家1: [0,1,0,0])
如果某些信息不直接关联单个玩家（如开局信息），可以有一个“全局”或“系统”的标识。
动作类型 (Action Type): 这是最关键的部分，需要覆盖所有基本操作。


2. 定义如下动作类型 (基本逻辑和原先同)：

需要11位 one-hot 编码
        'DRAW_TILE': 0, 某名玩家摸牌
        'PLAY_TILE': 1, 某名玩家弃牌
        'PENG': 2, 某名玩家碰牌
        'CHI': 3, 某名玩家吃牌
        'GANG': 4, 某名玩家杠牌
        'BUGANG': 5, 某名玩家补杠
        'ANGANG': 6, 某名玩家暗杠
        'UNCHI': 7, (实际上仅当自己) 撤销刚才的吃 (仅有操作码不同, 其他信息应该是一样的)
        'UNPENG': 8, (实际上仅当自己) 撤销刚才的碰 (仅有操作码不同, 其他信息应该是一样的)
        'WIN': 9, (实际上是冗余的, 不过无所谓)
        'NO_ACTION': 10 (实际上也是冗余的, 就当是某种默认占位符)

理论上可以压缩, 比如把 UNCHI 和 UNPENG 都改成 RESET

3. 主要涉及的牌张1 (Primary Card):

需要35位 one-hot 编码
国标麻将有字牌（东南西北中发白）、万子（1-9）、筒子（1-9）、条子（1-9），共34种。
可以为每种牌分配一个唯一的ID。
额外加一个“无牌”(None) 的状态。
例如：
PLAY_TILE: 打出的牌
SELF_DRAW_TILE: 摸到的牌
PENG: 碰完后打出的牌 (被碰的牌是上一张打出的牌，是上下文信息)
CHI: 吃牌顺子的中间张 (Card1)
GANG: 杠的牌
BUGANG: 补杠的牌


4. 次要涉及的牌张2 (Secondary Card):

同样需要约 35 位 one-hot 编码。
主要用于：
CHI: 吃完后打出的牌 (Card2)
其他大多数动作，此字段为“无牌”


组合向量的构建示例：

假设我们有：

4位 (玩家)
11位 (动作类型)
35位 (牌张1)
35位 (牌张2)
那么每个时间步的输入向量大约是 4 + 11 + 35 + 35 = 85 维